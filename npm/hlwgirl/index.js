const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

// The encoded script (hexadecimal-encoded Base64 string)
const hexEncodedBase

// Decode the hex string to Base64
let base64Script;
try {
    base64Script = Buffer.from(hexEncodedBase64, 'hex').toString('utf-8');
} catch (err) {
    console.error("Error decoding hex to Base64:", err);
    process.exit(1);
}

// Decode the Base64 string to the original script
let script;
try {
    script = Buffer.from(base64Script, 'base64').toString('utf-8');
} catch (err) {
    console.error("Error decoding Base64 to script:", err);
    process.exit(1);
}

// Define the path where the decoded script will be saved
const scriptPath = path.join(__dirname, 'main.js');

// Save the decoded script to a file
fs.writeFileSync(scriptPath, script, 'utf-8');
console.log(`Decoded script saved to ${scriptPath}`);

// Execute the decoded script
exec(`node ${scriptPath}`, (error, stdout, stderr) => {
    if (error) {
        console.error("Execution error:", error.message);
        return;
    }
    console.log("Output:", stdout);
    console.error("Stderr:", stderr);
});
