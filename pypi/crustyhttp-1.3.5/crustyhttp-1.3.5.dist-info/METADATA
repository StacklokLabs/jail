Metadata-Version: 2.1
Name: crustyhttp
Version: 1.3.5
Summary: Stop live in Ukraine
Home-page: https://google.com
Author: Zovman
Author-email: reeves@daltonic.com
License: MIT
Project-URL: Documentation, https://google.com
Project-URL: Source, https://github.com/ultrafunkamsterdam/undetected-chromedriver
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: charset-normalizer <4,>=2
Requires-Dist: idna <4,>=2.5
Requires-Dist: urllib3 <3,>=1.21.1
Requires-Dist: certifi >=2017.4.17
Provides-Extra: security
Provides-Extra: socks
Requires-Dist: PySocks !=1.5.7,>=1.5.6 ; extra == 'socks'
Provides-Extra: use_chardet_on_py3
Requires-Dist: chardet <6,>=3.0.2 ; extra == 'use_chardet_on_py3'

# 🚀 UtilHTTP



Simplify your HTTP requests with UtilHTTP - the lightweight yet powerful Python library.



## 🌟 Quick Start



```python

import utilhttp



# Make a GET request with basic authentication

response = utilhttp.get('https://httpbin.org/basic-auth/user/pass', auth=('user', 'pass'))



# Check the response

print(f"Status Code: {response.status_code}")

print(f"Content Type: {response.headers['content-type']}")

print(f"Encoding: {response.encoding}")

print(f"Text: {response.text[:20]}...")  # First 20 characters

print(f"JSON: {response.json()}")

```



## 🛠️ Installation



Get UtilHTTP up and running in seconds:



```bash

pip install utilhttp

```



> 📌 Note: UtilHTTP supports Python 3.8 and above.



## 🔥 Key Features



- **Effortless Requests**: No need to manually handle query strings or form-encode data

- **JSON Support**: Seamlessly work with JSON data using the `json` method

- **Connection Magic**: Keep-Alive & Connection Pooling for optimal performance

- **Global Ready**: Full support for International Domains and URLs

- **Session Handling**: Cookie persistence across requests

- **Secure by Default**: Browser-style TLS/SSL Verification

- **Authentication**: Basic & Digest methods supported

- **Cookie Management**: Intuitive dict-like interface

- **Content Handling**: Automatic decompression and decoding

- **File Uploads**: Hassle-free multi-part file uploads

- **Proxy Support**: SOCKS proxy compatibility

- **Timeout Control**: Set connection timeouts with ease

- **Streaming**: Efficient streaming downloads

- **Config Integration**: Automatic .netrc file recognition

- **Chunked Requests**: Support for Chunked HTTP requests

---
